//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace WindowsFormsApplication3.SMSService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="smsServiceSoap", Namespace="http://tempuri.org/")]
    public partial class smsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback initOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback chargUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountTestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public smsService() {
            this.Url = global::WindowsFormsApplication3.Properties.Settings.Default.DataProcessSystem_SMSService_smsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event initCompletedEventHandler initCompleted;
        
        /// <remarks/>
        public event registerCompletedEventHandler registerCompleted;
        
        /// <remarks/>
        public event sendSMSCompletedEventHandler sendSMSCompleted;
        
        /// <remarks/>
        public event getBalanceCompletedEventHandler getBalanceCompleted;
        
        /// <remarks/>
        public event getClientBalanceCompletedEventHandler getClientBalanceCompleted;
        
        /// <remarks/>
        public event chargUpCompletedEventHandler chargUpCompleted;
        
        /// <remarks/>
        public event UnRegisterCompletedEventHandler UnRegisterCompleted;
        
        /// <remarks/>
        public event accountTestCompletedEventHandler accountTestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/init", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string init(string cid) {
            object[] results = this.Invoke("init", new object[] {
                        cid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void initAsync(string cid) {
            this.initAsync(cid, null);
        }
        
        /// <remarks/>
        public void initAsync(string cid, object userState) {
            if ((this.initOperationCompleted == null)) {
                this.initOperationCompleted = new System.Threading.SendOrPostCallback(this.OninitOperationCompleted);
            }
            this.InvokeAsync("init", new object[] {
                        cid}, this.initOperationCompleted, userState);
        }
        
        private void OninitOperationCompleted(object arg) {
            if ((this.initCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.initCompleted(this, new initCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string register(string innerAl) {
            object[] results = this.Invoke("register", new object[] {
                        innerAl});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void registerAsync(string innerAl) {
            this.registerAsync(innerAl, null);
        }
        
        /// <remarks/>
        public void registerAsync(string innerAl, object userState) {
            if ((this.registerOperationCompleted == null)) {
                this.registerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterOperationCompleted);
            }
            this.InvokeAsync("register", new object[] {
                        innerAl}, this.registerOperationCompleted, userState);
        }
        
        private void OnregisterOperationCompleted(object arg) {
            if ((this.registerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerCompleted(this, new registerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendSMS(string uid, string pwd, string cid, string smsTableString) {
            object[] results = this.Invoke("sendSMS", new object[] {
                        uid,
                        pwd,
                        cid,
                        smsTableString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendSMSAsync(string uid, string pwd, string cid, string smsTableString) {
            this.sendSMSAsync(uid, pwd, cid, smsTableString, null);
        }
        
        /// <remarks/>
        public void sendSMSAsync(string uid, string pwd, string cid, string smsTableString, object userState) {
            if ((this.sendSMSOperationCompleted == null)) {
                this.sendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSMSOperationCompleted);
            }
            this.InvokeAsync("sendSMS", new object[] {
                        uid,
                        pwd,
                        cid,
                        smsTableString}, this.sendSMSOperationCompleted, userState);
        }
        
        private void OnsendSMSOperationCompleted(object arg) {
            if ((this.sendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSMSCompleted(this, new sendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getBalance(string account, string pwd) {
            object[] results = this.Invoke("getBalance", new object[] {
                        account,
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBalanceAsync(string account, string pwd) {
            this.getBalanceAsync(account, pwd, null);
        }
        
        /// <remarks/>
        public void getBalanceAsync(string account, string pwd, object userState) {
            if ((this.getBalanceOperationCompleted == null)) {
                this.getBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBalanceOperationCompleted);
            }
            this.InvokeAsync("getBalance", new object[] {
                        account,
                        pwd}, this.getBalanceOperationCompleted, userState);
        }
        
        private void OngetBalanceOperationCompleted(object arg) {
            if ((this.getBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBalanceCompleted(this, new getBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClientBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getClientBalance(string account, string cid) {
            object[] results = this.Invoke("getClientBalance", new object[] {
                        account,
                        cid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getClientBalanceAsync(string account, string cid) {
            this.getClientBalanceAsync(account, cid, null);
        }
        
        /// <remarks/>
        public void getClientBalanceAsync(string account, string cid, object userState) {
            if ((this.getClientBalanceOperationCompleted == null)) {
                this.getClientBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientBalanceOperationCompleted);
            }
            this.InvokeAsync("getClientBalance", new object[] {
                        account,
                        cid}, this.getClientBalanceOperationCompleted, userState);
        }
        
        private void OngetClientBalanceOperationCompleted(object arg) {
            if ((this.getClientBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientBalanceCompleted(this, new getClientBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chargUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chargUp(string account, string pwd, string cardid, string cardPWD) {
            object[] results = this.Invoke("chargUp", new object[] {
                        account,
                        pwd,
                        cardid,
                        cardPWD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chargUpAsync(string account, string pwd, string cardid, string cardPWD) {
            this.chargUpAsync(account, pwd, cardid, cardPWD, null);
        }
        
        /// <remarks/>
        public void chargUpAsync(string account, string pwd, string cardid, string cardPWD, object userState) {
            if ((this.chargUpOperationCompleted == null)) {
                this.chargUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchargUpOperationCompleted);
            }
            this.InvokeAsync("chargUp", new object[] {
                        account,
                        pwd,
                        cardid,
                        cardPWD}, this.chargUpOperationCompleted, userState);
        }
        
        private void OnchargUpOperationCompleted(object arg) {
            if ((this.chargUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chargUpCompleted(this, new chargUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnRegister(string account, string pwd) {
            object[] results = this.Invoke("UnRegister", new object[] {
                        account,
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnRegisterAsync(string account, string pwd) {
            this.UnRegisterAsync(account, pwd, null);
        }
        
        /// <remarks/>
        public void UnRegisterAsync(string account, string pwd, object userState) {
            if ((this.UnRegisterOperationCompleted == null)) {
                this.UnRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnRegisterOperationCompleted);
            }
            this.InvokeAsync("UnRegister", new object[] {
                        account,
                        pwd}, this.UnRegisterOperationCompleted, userState);
        }
        
        private void OnUnRegisterOperationCompleted(object arg) {
            if ((this.UnRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnRegisterCompleted(this, new UnRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/accountTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string accountTest(string account, string pwd, string mobileNumber, string text) {
            object[] results = this.Invoke("accountTest", new object[] {
                        account,
                        pwd,
                        mobileNumber,
                        text});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void accountTestAsync(string account, string pwd, string mobileNumber, string text) {
            this.accountTestAsync(account, pwd, mobileNumber, text, null);
        }
        
        /// <remarks/>
        public void accountTestAsync(string account, string pwd, string mobileNumber, string text, object userState) {
            if ((this.accountTestOperationCompleted == null)) {
                this.accountTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountTestOperationCompleted);
            }
            this.InvokeAsync("accountTest", new object[] {
                        account,
                        pwd,
                        mobileNumber,
                        text}, this.accountTestOperationCompleted, userState);
        }
        
        private void OnaccountTestOperationCompleted(object arg) {
            if ((this.accountTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountTestCompleted(this, new accountTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void initCompletedEventHandler(object sender, initCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class initCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal initCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void registerCompletedEventHandler(object sender, registerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendSMSCompletedEventHandler(object sender, sendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getBalanceCompletedEventHandler(object sender, getBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getClientBalanceCompletedEventHandler(object sender, getClientBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void chargUpCompletedEventHandler(object sender, chargUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chargUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chargUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnRegisterCompletedEventHandler(object sender, UnRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void accountTestCompletedEventHandler(object sender, accountTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591